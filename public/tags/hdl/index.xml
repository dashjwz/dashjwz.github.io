<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HDL on Dashjay&#39;s</title>
    <link>/tags/hdl/</link>
    <description>Recent content in HDL on Dashjay&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 27 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/hdl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用Modelsim中的CommandTools 进行仿真</title>
      <link>/post/2019/07/27/modelsim-commandtools/</link>
      <pubDate>Sat, 27 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/07/27/modelsim-commandtools/</guid>
      <description>之前一直使用的是iverilog进行的仿真，生成vvp可执行文件之后运行得到结果 方法如下直接给Makefile
 all: cmp vvp lxt cmp: iverilog *.v -o tb_top.vvp vvp: vvp tb_top.vvp lxt: cat top.lxt clean: @rm -rf tb_top.vvp tb_top.lxt 有了以上Makefile，将*.v文件和Makefile放在一起，make即可完成相应操作
但是用这种方式，生成的波形只能使用GTKwave来查看，并且当有一些复杂的情况出现时候，iverilog就无法处理了，所以我们使用Intel提供的免费的Modelsim来完成仿真，仿真资料比较少，全是图形化界面的介绍，道路坎坷。
第一步：下载全套工具 intel官网下载的lite版本，最小套装 Quartus-lite-18.1.0.625-linux.tar
第二步：安装 解压之后有一键安装脚本，运行的时候会提示缺库，安装对应的库文件就可以使用了。
第三步：仿真出波形 1. vlog工具 路径位于intelFPGA_lite/18.1/modelsim_ase/bin/vlog 执行vlog *.v即可对当前目录所有.v文件进行编译操作
我给了一个模板.v文件
module top_module( input [3:0] a, input [3:0] b, output reg[7:0] p ); reg [7:0] pv; reg [7:0] ap; integer i; always@(*) begin pv = 8&#39;b00000000; ap = {4&#39;b0000,a}; for(i = 0; i&amp;lt;=3; i=i+1) begin if(b[i]==1) pv = pv + ap; ap = {ap[6:0],1&#39;b0}; end p = pv; end endmodule 运行vlog *.</description>
    </item>
    
  </channel>
</rss>